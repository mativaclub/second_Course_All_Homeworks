package com.maps.employees;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class EmployeesApplication {

	public static void main(String[] args) {
		SpringApplication.run(EmployeesApplication.class, args);
	}



	//1. –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç —Å EmployeeBook –Ω–∞ Map –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–≤ –º–µ—Ç–æ–¥—ã
// –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø–æ–∏—Å–∫–∞.
//2. –ü—Ä–æ–¥—É–º–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è –∫–ª—é—á–µ–π, —á—Ç–æ–±—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –æ–¥–Ω–∏–º –§–ò–û —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ,
// –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–æ–±–∞–≤–ª—è–ª—Å—è –∏ —É–¥–∞–ª—è–ª—Å—è.
//3. –ò–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Ü–∏–∫–ª–æ–≤ –≤ –º–µ—Ç–æ–¥–∞—Ö –ø–æ –ø–æ–∏—Å–∫—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∑–∞–º–µ–Ω–∏–≤ –Ω–∞ –º–µ—Ç–æ–¥—ã Map.
//4. –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ –º–µ—Ç–æ–¥—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –º–µ—Ç–æ–¥–∞–º–∏ Map.
//- **–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏**
//    - –í—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ
//    - –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞
//    - –í—Å–µ –º–µ—Ç–æ–¥—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –º–∞–ø—ã
//    - –õ—é–±–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
//    - –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
//    - –ü—Ä–æ–µ–∫—Ç –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –Ω–∞ map
//
//üêù FAQ
//
//–í–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∑–∞–¥–∞–≤–∞–ª–∏ —É—á–µ–Ω–∏–∫–∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞.
//
//–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–∞–π–¥—ë—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.
//
//- –°–º–æ—Ç—Ä–µ—Ç—å
//    1. ***–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –º–∞–ø—É, –µ—Å–ª–∏ —Ç–∞–∫–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–∂–µ –µ—Å—Ç—å –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É —Å
//    –∫–∞–∫–∏–º —Å—Ç–∞—Ç—É—Å–æ–º, 404 Bad Request ?***
//
//    **–û—Ç–≤–µ—Ç**: –¢–æ–ª—å–∫–æ 400 , 404 - not found.
//
//    1. ***–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–ª—é—á, –µ—Å–ª–∏ –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è –ø–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º?***
//
//    **–û—Ç–≤–µ—Ç**: –ù–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–µ–π –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏. –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è —ç—Ç–æ —Å–ª–æ–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫.


	//–ü—Ä–æ–µ–∫—Ç –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω —Å EmployeeBook –Ω–∞ Map –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
	//–í—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–µ.
	//–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
	//–õ—é–±–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.
	//–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞.
	//–í—Å–µ –º–µ—Ç–æ–¥—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω—ã –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –º–µ—Ç–æ–¥–∞–º–∏ Map.
	//–í—ã –∏–∑–±–∞–≤–∏–ª–∏—Å—å –æ—Ç —Ü–∏–∫–ª–æ–≤ –≤ –º–µ—Ç–æ–¥–∞—Ö –ø–æ –ø–æ–∏—Å–∫—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∑–∞–º–µ–Ω–∏–≤ –Ω–∞ –º–µ—Ç–æ–¥—ã Ma




	//–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–∏–ª–µ–Ω—å–∫–æ–≤
	//01.05.23 15:00
	//–ù–µ –ø–æ–Ω—è–ª –ø–æ –∑–∞–¥–∞–Ω–∏—é :
	//
	//1 –Ω—É–∂–Ω–æ –ª–∏ —ç—Ç–æ –¥–µ–ª–∞—Ç—å –≤ —Å–ø—Ä–∏–Ω–≥?
	//
	//2 –µ—Å–ª–∏ –Ω–µ –¥–µ–ª–∞—Ç—å –≤ —Å–ø—Ä–∏–Ω–≥ –ø–æ—á–µ–º—É —Ç–æ–≥–¥–∞ –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö  –∫ –∑–∞–¥–∞–Ω–∏—é –µ—Å—Ç—å —Ç–∞–∫–æ–π "
	//
	//
	//–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –º–∞–ø—É, –µ—Å–ª–∏ —Ç–∞–∫–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–∂–µ –µ—Å—Ç—å –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É —Å –∫–∞–∫–∏–º —Å—Ç–∞—Ç—É—Å–æ–º,
	// 404 Bad Request ?
	//
	//–û—Ç–≤–µ—Ç: –¢–æ–ª—å–∫–æ 400 , 404 - not found."
	//
	//–∫–∞–∫ –≤–µ—Ä–Ω—É—Ç—å HTTP —Å—Ç–∞—Ç—É—Å –±–µ–∑ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π?
	//
	//
	//
	//3 –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∫–∞–∫–æ–π-—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –≤ –ø–æ–ª–µ –∫–ª—é—á–∞ –≤ MAP, –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è —Å–ª–æ–∂–∏—Ç—å –ò–º—è –∏ –§–∞–º–∏–ª–∏—é,
	// –Ω–æ –≤–µ–¥—å —ç—Ç–æ –Ω–µ —Å–¥–µ–ª–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á, –∑–∞–ø—Ä–æ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ
	// –ò–≤–∞–Ω–æ–≤—ã—Ö –ò–≤–∞–Ω–æ–≤? –ò –¥–∞–∂–µ –µ—Å–ª–∏ –¥–æ–ø—É—Å—Ç–∏—Ç—å,—á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)
	// –º–æ–∂–Ω–æ –ª–∏ –Ω–∞–ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞ —Ö–µ—à–∫–æ–¥ Employee, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π –≤ —Å—Ç—Ä–æ–∫—É?
	//
	//
	//–î–º–∏—Ç—Ä–∏–π –ë–∏–∑–∏–Ω
	//01.05.23 15:48
	//–ü—Ä–∏–≤–µ—Ç!
	//
	//
	//
	//–î–∞, –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤ —Å–ø—Ä–∏–Ω–≥–æ–≤–æ–º –ø—Ä–æ–µ–∫—Ç–µ.
	//–ü–æ –∑–∞–¥–∞–Ω–∏—é –Ω–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –∏ —Ñ–∞–º–∏–ª–∏—è–º–∏,
	// –∏–Ω–∞—á–µ –±—ã –Ω–µ –±—ã–ª–æ —Ç–∞–∫–æ–≥–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è) –ü–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–∞ –∫–∞–∫–∞—è-—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç –∏–º–µ–Ω–∏ –∏
	// —Ñ–∞–º–∏–ª–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–∞—Å—Ç –∫–ª—é—á –¥–ª—è –º–∞–ø—ã. –ù–æ –≤ —Ü–µ–ª–æ–º –º–æ–∂–Ω–æ –∏ –¥—Ä—É–≥–æ–π –∫–ª—é—á
	// –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –Ω–µ –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ)



	//–°—Ç–∞–Ω–∏—Å–ª–∞–≤ –õ—é–±–∞–Ω—å
	//03.05.23 11:31
	//–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞?
	//
	//–•–æ—á—É –ø–æ–∫–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –º–æ–µ–≥–æ Map –≤ –±—Ä–∞—É–∑–µ—Ä –ø–æ –∑–∞–ø—Ä–æ—Å—É lacalhost:8080.
	// –Ω–æ –≤—ã–ª–µ—Ç–∞–µ—Ç –æ—à–∏–±–∫–∞ 500. –∞ —á—Ç–æ –Ω–µ —Ç–∞–∫ –Ω–µ –º–æ–≥—É –ø–æ—è–Ω—Ç—å
	//
	//https://github.com/Liuban0Stanislav/Homework2.8/pull/1
	//
	//
	//–ê—Ä—Ç–µ–º –ü–µ—Ç—Ä–æ—Å—è–Ω
	//03.05.23 14:17
	//–ü—Ä–∏–≤–µ—Ç, –°—Ç–∞–Ω–∏—Å–ª–∞–≤!
	//
	//
	//
	//–û—à–∏–±–∫–∞ –≤ —Ç–æ–º, —á—Ç–æ –≤ –º–µ—Ç–æ–¥–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —Ç—ã –æ–±—Ä–∞—â–∞–µ—à—å—Å—è –Ω–µ –∫ –º–µ—Ç–æ–¥—É —Å–µ—Ä–≤–∏—Å–∞, –∞ –∫ –º–µ—Ç–æ–¥—É –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞.
	//
	//–ò–∑-–∑–∞ —ç—Ç–æ–≥–æ —É —Ç–µ–±—è –±—É–¥–µ—Ç StackOverflowError.
	//
	//–¢–µ–±–µ –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ getEmployees() —á–µ—Ä–µ–∑ employeeBook.
	//
	//
	//–°—Ç–∞–Ω–∏—Å–ª–∞–≤ –õ—é–±–∞–Ω—å
	//03.05.23 14:32
	//–î–∞, —É–∂–µ –∑–∞–º–µ—Ç–∏–ª ))) –æ—Ö —É–∂ —ç—Ç–∞ –Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
	//
	//–°–ø–∞—Å–∏–±–æ!



	//–°—Ç–∞–Ω–∏—Å–ª–∞–≤ –õ—é–±–∞–Ω—å
	//04.05.23 07:38
	//–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!
	//
	//–•–æ—á—É —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–∑ –ú–∞—Ä –≤ –±—Ä–∞—É–∑–µ—Ä –æ–Ω–∏ –±—ã –≤—ã–≤–æ–¥–∏–ª–∏—Å—å
	// –Ω–µ —Å—Ç—Ä–æ–∫–æ–π, –∞ –∫–∞–∂–¥—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
	//
	//
	//
	//–≠—Ç–æ —É –º–µ–Ω—è –º–µ—Ç–æ–¥ –∏–∑ –∫–ª–∞—Å—Å–∞ –°–µ—Ä–≤–∏—Å:
	//
	//public StringBuilder printEmployees() {
	//    StringBuilder rezString = new StringBuilder("");
	//    if (employees.isEmpty()){
	//       return rezString.append("–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Map –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
	//    }
	//    for (Employee employee: employees.values()) {
	//        rezString.append(employee.getFullName() + " " + employee.getSalary() + " " + employee.getId() + "\n");
	//    }
	//    return rezString;
	//}
	//
	//
	//–î–∞–ª–µ–µ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ:
	//
	//@GetMapping("/")
	//public String getEmployees() {
	//    return "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: " + employeeBook.printEmployees();
	//}
	//–í –±—Ä–∞—É–∑–µ—Ä –≤—Å–µ —Ä–∞–≤–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤—Å–µ —Å—Ç—Ä–æ–∫–æ–π.
	//
	//–û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ —ç—Ç–∏ –∂–µ –º–µ—Ç–æ–¥—ã —è –∏—Å–ø–æ–ª—å–∑—É—é –≤ –æ–±—ã—á–Ω–æ–º main —Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –Ω–∞–¥–æ. –•–º...., —á—Ç–æ –Ω–µ —Ç–∞–∫?

























	//
//        @RestController
//        public class Controller {
//
//            private EmployeeBook employeeBook;
//
//            public Controller(EmployeeBook employeeBook) {
//                this.employeeBook = employeeBook;
//            }
//
//            @GetMapping("/")
//            public String getEmployees() {
//                return "<pre><h2><b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:</b></h2>\n" + "" + employeeBook.printEmployees() + "<pre>";
//            }
//
//            @GetMapping("/add")
//            public String addEmployee(@RequestParam("fullName") String fullName,
//                                      @RequestParam("salary") int salary,
//                                      @RequestParam("dept") int dept) {
//                if (employeeBook.getEmployees().containsKey(fullName)) {
//                    return "—Ç–∞–∫–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–∂–µ –µ—Å—Ç—å";
//                }
//                try {
//                    employeeBook.addEmployee(fullName, salary, dept);
//                } catch (FullMapException e) {
//                    throw new RuntimeException("\u001B[31m –ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, " +
//                            "–¥–æ—Å—Ç–∏–≥–Ω—É—Ç –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–µ–ª –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Map\u001B[0m");
//                }
//                return "–°–æ—Ç—Ä—É–¥–Ω–∏–∫: " + employeeBook.getEmployees().get(fullName) + " –¥–æ–±–∞–≤–ª–µ–Ω";
//            }
//
//            @GetMapping("/find")
//            public String findEmployee(@RequestParam("fullName") String fullName) {
//                if (employeeBook.getEmployees().containsKey(fullName)) {
//                    return "–°–æ—Ç—Ä—É–¥–Ω–∏–∫: " + employeeBook.getEmployees().get(fullName);
//                } else {
//                    return "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω";
//                }
//            }
//
//            @GetMapping("/remove")
//            public String removeEmployee(@RequestParam("fullName") String fullName) {
//                try {
//                    employeeBook.removeEmployee(fullName);
//                } catch (NullPointerException e) {
//                    throw new RuntimeException("\u001B[31m –¢–∞–∫–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç \u001B[0m");
//                }
//                return "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ " + fullName + " —É–¥–∞–ª–µ–Ω";
//            }
//
//            @GetMapping("/change")
//            public String changeEmployee(@RequestParam("fullNameDeletingEmployee") String fullNameDeletingEmployee,
//                                         @RequestParam("fullNameNewEmployee") String fullNameNewEmployee,
//                                         @RequestParam("newSalary") int newSalary,
//                                         @RequestParam("newDept") int newDept) {
//                try {
//                    employeeBook.changeEmployee(fullNameDeletingEmployee,
//                            fullNameNewEmployee,
//                            newSalary,
//                            newDept);
//                } catch (NullPointerException e) {
//                    throw new RuntimeException("\u001B[31m –¢–∞–∫–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç \u001B[0m");
//                }
//                return "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ " + fullNameDeletingEmployee + " –∑–∞–º–µ–Ω–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º " + fullNameNewEmployee;
//            }
//
//            @GetMapping("/printAllEmployeesWithoutDept")
//            public String printAllEmployeesWithoutDept() {
//                return "<pre><h2><b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±–µ–∑ –æ—Ç–¥–µ–ª–æ–≤:</b></h2>\n" + "" + employeeBook.printEmployeesWithoutDept() + "<pre>";
//            }
//
//            @GetMapping("/printEmployeesAccordingToDept")
//            public String printEmployeesAccordingToDept() {
//                return "<pre><h2><b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –æ—Ç–¥–µ–ª–∞–º:</b></h2>\n" + "" + employeeBook.printEmployeesAccordingToDept() + "<pre>";
//            }
//
//            @GetMapping("/salaryIndexing")
//            public String salaryIndexing(@RequestParam("percent") double percentOfIndexing) {
//                StringBuilder sb = new StringBuilder("");
//                String bilo = employeeBook.salariesBILO().toString();
//                employeeBook.salaryIndexing(percentOfIndexing);
//                return "<pre><h2><b>–ó–∞—Ä–ø–ª–∞—Ç—ã –ë–´–õ–û:</b></h2>\n" + "" + bilo + "<pre>" +
//                        "<pre><h2><b>–ó–∞—Ä–ø–ª–∞—Ç—ã –°–¢–ê–õ–û:</b></h2>\n" + "" + employeeBook.printEmployees() + "<pre>" +
//                        "<pre><h2>–†–∞–∑–º–µ—Ä –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ - " + percentOfIndexing + "%</h2></pre>";
//            }
//
//            @GetMapping("/salaryLess")
//            public String salaryLessThan(@RequestParam("lessThan") int salaryLessThan) {
//                return "<pre><h2><b>–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –º–µ–Ω—å—à–µ —á–µ–º - " + salaryLessThan + " —Ä—É–±–ª–µ–π</b></h2><pre>" +
//                        "<pre>" + employeeBook.salaryLessThan(salaryLessThan) + "<pre>";
//
//            }
//            @GetMapping("/salaryMore")
//            public String salaryMoreThan(@RequestParam("moreThan") int salaryMoreThan) {
//                return "<pre><h2><b>–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –±–æ–ª—å—à–µ —á–µ–º - " + salaryMoreThan + " —Ä—É–±–ª–µ–π</b></h2><pre>" +
//                        "<pre>" + employeeBook.salaryMoreThan(salaryMoreThan) + "<pre>";
//
//            }
//        }
//        74 changes: 74 additions & 0 deletions74
//        src/main/java/com/skypro/homework2_8/Employee.java
//        Marking files as viewed can help keep track of your progress, but will not affect your submitted reviewViewed
//        Comment on this file
//        @@ -0,0 +1,74 @@
//package com.skypro.homework2_8;
//
//import java.util.Objects;
//
//        public class Employee {
//            private String fullName;
//            private int salary;
//            private int dept;
//            private int id;
//            private static int idCounter = 0;
//
//            public Employee(String fullName, int salary, int dept) {
//                this.fullName = fullName;
//                this.salary = salary;
//                this.dept = dept;
//                this.id = idCounter++;
//            }
//
//            public String getFullName() {
//                return fullName;
//            }
//
//            public int getDept() {
//                return dept;
//            }
//
//            public int getId() {
//                return id;
//            }
//
//            public int getSalary() {
//                return salary;
//            }
//
//            public static int getIdCounter() {
//                return idCounter;
//            }
//
//            public void setFullName(String firstName) {
//                this.fullName = firstName;
//            }
//
//            public void setDept(int dept) {
//                this.dept = dept;
//            }

//            public void setSalary(int salary) {
//                this.salary = salary;
//            }
//
//            @Override
//            public boolean equals(Object o) {
//                if (this == o) return true;
//                if (o == null || getClass() != o.getClass()) return false;
//                Employee employee = (Employee) o;
//                return fullName.equals(employee.fullName);
//            }
//
//            @Override
//            public int hashCode() {
//                int result = 17;
//                result = 31 * result + fullName.hashCode();
//                return result;
//            }
//
//
//            @Override
//            public String toString() {
//                return                  fullName +
//                        " –∑–∞—Ä–ø–ª–∞—Ç–∞: " + salary +
//                        ", –æ—Ç–¥–µ–ª: " + dept +
//                        ", id: " + id ;
//            }
//        }
//        289 changes: 289 additions & 0 deletions289
//        src/main/java/com/skypro/homework2_8/EmployeeBook.java
//        Marking files as viewed can help keep track of your progress, but will not affect your submitted reviewViewed
//        Comment on this file
//        @@ -0,0 +1,289 @@
//package com.skypro.homework2_8;

//import com.skypro.homework2_8.execptions.FullMapException;
//import org.springframework.stereotype.Service;
//
//import java.text.DecimalFormat;
//import java.util.*;
//
//        @Service
//        public class EmployeeBook {
//
//            private Map<String, Employee> employees = new HashMap<>(Map.of(
//                    "–ü–æ–ø–æ–≤–∞ –í–∞—Ä–≤–∞—Ä–∞ –ë–æ–≥–¥–∞–Ω–æ–≤–Ω–∞",
//                    new Employee("–ü–æ–ø–æ–≤–∞ –í–∞—Ä–≤–∞—Ä–∞ –ë–æ–≥–¥–∞–Ω–æ–≤–Ω–∞", 85_000, 5),
//                    "–ü–µ—Ç—Ä–æ–≤–∞ –ï–ª–µ–Ω–∞ –ü–∞–≤–ª–æ–≤–Ω–∞",
//                    new Employee("–ü–µ—Ç—Ä–æ–≤–∞ –ï–ª–µ–Ω–∞ –ü–∞–≤–ª–æ–≤–Ω–∞", 87_000, 2),
//                    "–í–∞—Å–∏–ª—å–µ–≤ –î–µ–Ω–∏—Å –ê–Ω–¥—Ä–µ–µ–≤–∏—á",
//                    new Employee("–í–∞—Å–∏–ª—å–µ–≤ –î–µ–Ω–∏—Å –ê–Ω–¥—Ä–µ–µ–≤–∏—á", 65_000, 1),
//                    "–õ—è–Ω–≥–µ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì—Ä–∏–≥–æ—Ä—å–µ–≤–∏—á",
//                    new Employee("–õ—è–Ω–≥–µ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì—Ä–∏–≥–æ—Ä—å–µ–≤–∏—á", 90_000, 3),
//                    "–ö—É–∑–Ω–µ—Ü–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°–µ–º–µ–Ω–æ–≤–∏—á",
//                    new Employee("–ö—É–∑–Ω—Ü–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°–µ–º–µ–Ω–æ–≤–∏—á", 67_000, 4),
//                    "–°–∫–≤–æ—Ä—Ü–æ–≤ –°–µ—Ä–≥–µ–π –î–µ–Ω–∏—Å–æ–≤–∏—á",
//                    new Employee("–°–∫–≤–æ—Ä—Ü–æ–≤ –°–µ—Ä–≥–µ–π –î–µ–Ω–∏—Å–æ–≤–∏—á", 63_000, 4)
//            ));
//
//
//            public StringBuilder printEmployees() {
//                StringBuilder rezString = new StringBuilder("");
//                if (employees.isEmpty()) {
//                    return rezString.append("–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Map –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
//                }
//                for (Employee employee : employees.values()) {
//                    rezString.append("- " + employee.getFullName() +
//                            ", –∑–∞—Ä–ø–ª–∞—Ç–∞: " + employee.getSalary() +
//                            ", –æ—Ç–¥–µ–ª: " + employee.getDept() + "\n");
//                }
//                return rezString;
//            }
//
//
//            public void addEmployee(String fullName, int salary, int dept) {
//                if (Employee.getIdCounter() > 6) {
//                    throw new FullMapException();
//                }
//                employees.put(fullName, new Employee(fullName, salary, dept));
//            }
//
//            public void removeEmployee(String fullName) {
//                if (employees.containsKey(fullName)) {
//                    employees.remove(fullName);
//                } else {
//                    throw new RuntimeException();
//                }
//            }


//            public Map<String, Employee> getEmployees() {
//                return employees;
//            }
//
//            public void changeEmployee(String fullNameDeletingEmlpoyee,
//                                       String fullNameNewEmployee,
//                                       Integer newSalary,
//                                       Integer newDept) {
//                if (employees.containsKey(fullNameDeletingEmlpoyee)) {
//                    removeEmployee(fullNameDeletingEmlpoyee);
//                    addEmployee(fullNameNewEmployee, newSalary, newDept);
//                } else {
//                    throw new NullPointerException();
//                }
//            }
//
//            public StringBuilder printEmployeesWithoutDept() {
//                StringBuilder rezString = new StringBuilder("");
//                if (employees.isEmpty()) {
//                    return rezString.append("–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Map –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
//                }
//                for (Employee employee : employees.values()) {
//                    rezString.append("- " + employee.getFullName() +
//                            ", –∑–∞—Ä–ø–ª–∞—Ç–∞: " + employee.getSalary() +
//                            "\n");
//                }
//                return rezString;
//            }


//            public StringBuilder printEmployeesAccordingToDept() {
//                int[] arrDept = new int[employees.size()];
//                /**
//                 * –ü—ã—Ç–∞—é—Å—å –ø–æ–ª—É—á–∏—Ç—å —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ—Ç–¥–µ–ª–æ–≤, –≥–¥–µ –æ—Ç–¥–µ–ª—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è.
//                 * –î–ª—è —ç—Ç–æ–≥–æ:
//                 * –°–æ—Ö–¥–∞—é –º–∞—Å—Å–∏–≤ arrDept –∏ –∑–∞–ø–∏—Å—ã–≤–∞—é –≤ –Ω–µ–≥–æ –Ω–æ–º–µ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ—Ç–¥–µ–ª–æ–≤ –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
//                 */
//                int i = 0;
//                for (Employee employee: employees.values()) {
//                    arrDept[i++] = employee.getDept();
//                }
//                System.out.println("–ù–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ arrDept: " + Arrays.toString(arrDept));
//                Arrays.sort(arrDept);
//                System.out.println("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ arrDept: " + Arrays.toString(arrDept));
//                int arrElCounter = 1;
//                /**
//                 * –ü–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ –≤ –Ω–µ–º –º–æ–≥—É—Ç –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –æ—Ç–¥–µ–ª—ã
//                 * –°–æ–∑–¥–∞—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é arrElCounter, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ—Å—É–º–º–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ—Ç–¥–µ–ª—ã, –∏ —Å—Ç–∞–Ω–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤
//                 * –≤ –º–∞—Å—Å–∏–≤–µ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è –æ—Ç–¥–µ–ª–∞–º–∏.
//                 */
//                for (i = 0; i < employees.size() - 1; i++) {
//                    if (arrDept[i] != arrDept[i + 1]) {
//                        arrElCounter++;
//                    }
//                }
//                /**
//                 * –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–ø–æ–ª–Ω–∏–ª–∞—Å—å –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏—Ç–æ–≥–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –æ—Ç–¥–µ–ª–∞–º–∏ arrDeptUnic.
//                 */
//                int[] arrDeptUnic = new int[arrElCounter];
//                /**
//                 * –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å —Ü–∏–∫–ª–æ–º –ø–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –º–∞—Å—Å–∏–≤—É arrDept,
//                 * –≤—ã–±—Ä–∞—Ç—å –∏–∑ –Ω–µ–≥–æ –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –Ω–æ–º–µ—Ä–∞ –æ—Ç–¥–µ–ª–æ–≤, –∏ –∑–∞–ø–∏—Å–∞—Ç—å –∏—Ö –≤ –º–∞—Å—Å–∏–≤ arrDeptUnic
//                 * –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
//                 */
//                arrElCounter = 0;
//                System.out.println("–ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ arrDeptUnic: " + Arrays.toString(arrDeptUnic));
//                for (i = 0; i < employees.size() - 1; i++) {
//                    if (arrDept[i] != arrDept[i + 1]) {
//                        arrDeptUnic[arrElCounter]=arrDept[i];
//                        System.arraycopy(arrDept, i, arrDeptUnic, arrElCounter, 1);
//                        arrElCounter++;
//                    }
//                }
//                arrDeptUnic[arrElCounter] = arrDept[arrDept.length - 1];
//                System.out.println("–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ arrDeptUnic: " + Arrays.toString(arrDeptUnic));
//                /**
//                 * –ú–∞—Å—Å–∏–≤ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –æ—Ç–¥–µ–ª–∞–º–∏ –ø–æ–ª—É—á–µ–Ω, –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏
//                 * –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ —Å–≤–æ–µ–º—É –æ—Ç–¥–µ–ª—É –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
//                 * –î–ª—è —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞—é —Ü–∏–∫–ª –≤ —Ü–∏–∫–ª–µ. –í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª - —ç—Ç–æ –ø–µ—Ä–µ–±–æ—Ä –æ—Ç–¥–µ–ª–æ–≤. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π
//                 * —Ü–∏–∫–ª —ç—Ç–æ –ø–µ—Ä–µ–±–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –æ—Ç–±–æ—Ä —Ç–µ—Ö —á–µ–π –Ω–æ–º–µ—Ä –æ—Ç–¥–µ–ª–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å
//                 * –Ω–æ–º–µ—Ä–º –æ—Ç–¥–µ–ª–∞ –≤–æ –≤–Ω–µ—à–Ω–µ–º —Ü–∏–∫–ª–µ.
//                 */
//                StringBuilder sbRez = new StringBuilder("");
//                for (i = 0; i < arrDeptUnic.length; i++) {
//                    sbRez.append("\n–û—Ç–¥–µ–ª ‚Ññ" + arrDeptUnic[i] + "\n");
//                    for(Employee employee: employees.values()){
//                        if(employee.getDept() == arrDeptUnic[i]){
//                            sbRez.append(employee.getFullName() + " \n");
//                        }
//                    }
//                }
//                return sbRez;
//            }
//
//            public void salaryIndexing(double percentOfIndexing) {
//                for (Employee employee: employees.values()) {
//                    double increasedSalary = employee.getSalary() * (1 + percentOfIndexing / 100);
//                    employee.setSalary((int) increasedSalary);
//                }
//            }
//            public StringBuilder salariesBILO() {
//                Map<String , Employee> emloyeeSalaryesBILO = employees;
//                StringBuilder rezString = new StringBuilder("");
//                if (emloyeeSalaryesBILO.isEmpty()) {
//                    return rezString.append("–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Map –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
//                }
//                for (Employee employee : emloyeeSalaryesBILO.values()) {
//                    rezString.append("- " + employee.getFullName() +
//                            ", –∑–∞—Ä–ø–ª–∞—Ç–∞: " + employee.getSalary() +
//                            ", –æ—Ç–¥–µ–ª: " + employee.getDept() + "\n");
//                }
//                return rezString;
//            }
//
//            public static void printEmployeeInfo(Employee employee) {
//                System.out.println("id: " + employee.getId() + ", –ø–æ–ª–Ω–æ–µ –∏–º—è: " +
//                        employee.getFullName() + ", –∑–∞—Ä–ø–ª–∞—Ç–∞: " +
//                        new DecimalFormat("###,###.##").format(employee.getSalary()) +
//                        " —Ä—É–±–ª–µ–π, " + " –æ—Ç–¥–µ–ª: " + employee.getDept());
//            }
//
//            public StringBuilder salaryLessThan(int lessThanThisNum) {
//                int lessSalariesCounter = 0;
//                StringBuilder rezString = new StringBuilder("");
//                for (Employee employee : employees.values()) {
//                    if (employee.getSalary() < lessThanThisNum) {
//                        rezString.append("- " + employee.getFullName() +
//                                ", –∑–∞—Ä–ø–ª–∞—Ç–∞: " + employee.getSalary() +
//                                ", –æ—Ç–¥–µ–ª: " + employee.getDept() + "\n");
//                        lessSalariesCounter++;
//                    }
//
//                }
//                if (lessSalariesCounter == 0) {
//                    return rezString.append("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –Ω–∏–∂–µ " + lessThanThisNum + " —Ä—É–±–ª–µ–π " + " - –Ω–µ—Ç");
//                }
//                return rezString;
//            }
//
//            public StringBuilder salaryMoreThan(int moreThanThisNum) {
//                int moreSalariesCounter = 0;
//                StringBuilder rezString = new StringBuilder("");
//                for (Employee employee : employees.values()) {
//                    if (employee.getSalary() > moreThanThisNum) {
//                        rezString.append("- " + employee.getFullName() +
//                                ", –∑–∞—Ä–ø–ª–∞—Ç–∞: " + employee.getSalary() +
//                                ", –æ—Ç–¥–µ–ª: " + employee.getDept() + "\n");
//                        moreSalariesCounter++;
//                    }
//
//                }
//                if (moreSalariesCounter == 0) {
//                    return rezString.append("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –≤—ã—à–µ " + moreThanThisNum + " —Ä—É–±–ª–µ–π " + " - –Ω–µ—Ç");
//                }
//                return rezString;
//            }
//
//


//    public int findEmployeesIdMinimalSalary() throws Exception {
//        if (employees == null) {
//            throw new Exception ("–í –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏");
//        }
//        int min = employees[0].getSalary();
//        int idEmployee = 0;
//        for (int i = 0; i < idCounter; i++) {
//            if (employees[i].getSalary() <= min) {
//                min = employees[i].getSalary();
//                idEmployee = employees[i].getId();
//            }
//        }
//        return idEmployee;
//    }
//
//    public int findEmployeesIdMaximalSalary() {
//        int max = employees[0].getSalary();
//        int idEmployee = 0;
//        for (int i = 0; i < employees.length; i++) {
//            if (employees[i].getSalary() > max) {
//                max = employees[i].getSalary();
//                idEmployee = employees[i].getId();
//            }
//        }
//        return idEmployee;
//    }
//
//    public void findAndPrintEmployeeById(int id) {
//        for (int i = 0; i < employees.length; i++) {
//            if (id == employees[i].getId()) {
//                printEmployeeInfo(employees[i]);
//            }
//        }
//    }
//
//    public int monthSumSalary() {
//        int sum = 0;
//        for (int i = 0; i < employees.length; i++) {
//            sum = employees[i].getSalary() + sum;
//        }
//        return sum;
//    }
//
//    public double monthMiddleSalary(int sum) {
//        return (double) sum / employees.length;
//    }
//
//    public double middleSalaryById(int idOfEmployee) {
//        int sumSalaries = 0;
//        int deptsCounter = 0;
//        for (int i = 0; i < employees.length; i++) {
//            if (employees[i].getDept() == idOfEmployee) {
//                sumSalaries = employees[i].getSalary() + sumSalaries;
//                deptsCounter++;
//            }
//            if (sumSalaries == 0) {
//                return -1;
//            }
//        }
//        return (double) sumSalaries / deptsCounter;
//    }
//
//    public static int getIdCounter() {
//        return idCounter;
//    }
//
//    public static void setIdCounter(int idCounter) {
//        EmployeeBook.idCounter = idCounter;
//    }
//

//        }
//        40 changes: 40 additions & 0 deletions40
//        src/main/java/com/skypro/homework2_8/Main.java
//        Marking files as viewed can help keep track of your progress, but will not affect your submitted reviewViewed
//        Comment on this file
//        @@ -0,0 +1,40 @@
//package com.skypro.homework2_8;
//
//import java.util.ArrayList;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Map;
//
//        public class Main {
//
//            static Map<String, Employee> employees;

//            public static void main(String[] args) {
//                employees = new HashMap<>(Map.of());
//                "–ü–æ–ø–æ–≤–∞ –í–∞—Ä–≤–∞—Ä–∞ –ë–æ–≥–¥–∞–Ω–æ–≤–Ω–∞",
//                new Employee("–ü–æ–ø–æ–≤–∞ –í–∞—Ä–≤–∞—Ä–∞ –ë–æ–≥–¥–∞–Ω–æ–≤–Ω–∞", 85_000,5),
//                "–ü–µ—Ç—Ä–æ–≤–∞ –ï–ª–µ–Ω–∞ –ü–∞–≤–ª–æ–≤–Ω–∞",
//                new Employee("–ü–µ—Ç—Ä–æ–≤–∞ –ï–ª–µ–Ω–∞ –ü–∞–≤–ª–æ–≤–Ω–∞", 87_000, 2),
//                "–í–∞—Å–∏–ª—å–µ–≤ –î–µ–Ω–∏—Å –ê–Ω–¥—Ä–µ–µ–≤–∏—á",
//                new Employee("–í–∞—Å–∏–ª—å–µ–≤ –î–µ–Ω–∏—Å –ê–Ω–¥—Ä–µ–µ–≤–∏—á", 65_000, 1),
//                "–õ—è–Ω–≥–µ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì—Ä–∏–≥–æ—Ä—å–µ–≤–∏—á",
//                new Employee("–õ—è–Ω–≥–µ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì—Ä–∏–≥–æ—Ä—å–µ–≤–∏—á", 90_000, 3)));
//                System.out.println(getEmployees());
//                if (employees.isEmpty() ){
//                    System.out.println("ybxtuj");
//                };
//            }
//
//            public static StringBuilder getEmployees() {
//                StringBuilder rezString = new StringBuilder("");
//                for (Employee employee: employees.values()) {
//                    rezString.append(employee.getFullName() + " " + employee.getSalary() + " " + employee.getId() + "\n");
//                }
//                return rezString;
//            }

//    public static Map<String, Employee> getEmployees() {
//        return employees;
//    }

//        }
//        4 changes: 4 additions & 0 deletions4
//        src/main/java/com/skypro/homework2_8/execptions/FullMapException.java
//        Marking files as viewed can help keep track of your progress, but will not affect your submitted reviewViewed
//        Comment on this file
//        @@ -0,0 +1,4 @@
//package com.skypro.homework2_8.execptions;
//
//        public class FullMapException extends RuntimeException{
//        }
//        6 changes: 6 additions & 0 deletions6
//        src/main/resources/templatesOfRequests.txt
//        Marking files as viewed can help keep track of your progress, but will not affect your submitted reviewViewed
//        Comment on this file
//        @@ -0,0 +1,6 @@
//                http://localhost:8080/find?fullName=–ü–æ–ø–æ–≤–∞%20–í–∞—Ä–≤–∞—Ä–∞%20–ë–æ–≥–¥–∞–Ω–æ–≤–Ω–∞
//        http://localhost:8080/remove?fullName=–ü–æ–ø–æ–≤–∞%20–í–∞—Ä–≤–∞—Ä–∞%20–ë–æ–≥–¥–∞–Ω–æ–≤–Ω–∞
//        http://localhost:8080/change?fullNameDeletingEmployee=–ü–æ–ø–æ–≤–∞%20–í–∞—Ä–≤–∞—Ä–∞%20–ë–æ–≥–¥–∞–Ω–æ–≤–Ω–∞&fullNameNewEmployee=–ê–Ω–¥—Ä–µ–µ–≤%20–ú–∞–∫—Å–∏–º%20–í–∏–∫—Ç–æ—Ä–æ–≤–∏—á&newSalary=63250&newDept=1
//        http://localhost:8080/salaryIndexing?percent=3.5
//        http://localhost:8080/salaryLess?lessThan=80000
//        http://localhost:8080/salaryMore?moreThan=80000











}
